const 歷史管理 = (() => {
  const obj = {};
  
  let 歷史列表 = [];
  let 目前步 = -1;
  window.addEventListener("load", 清空歷史);
  function 清空歷史() {
    歷史列表 = [];
    目前步 = -1;
    在歷史中記住現在();
  }
  function 在歷史中記住現在() {
    let 目前譜編碼 = 樂譜操作.取得譜編碼();
    let 目前歌詞碼 = 樂譜操作.取得歌詞碼();
    if(歷史列表[目前步]?.譜編碼 == 目前譜編碼 && 歷史列表[目前步]?.歌詞碼 == 目前歌詞碼) return;
    歷史列表 = 歷史列表.slice(0, 目前步 + 1);
    歷史列表.push({
      譜編碼: 目前譜編碼,
      歌詞碼: 目前歌詞碼,
    });
    if(歷史列表.length > 30) 歷史列表 = 歷史列表.slice(-30);
    目前步 = 歷史列表.length - 1;
  }
  function 上一步() {
    if(目前步 <= 0) return;
    目前步--;
    let 指針原位 = 播放器.指針位置;
    樂譜操作.清空();
    樂譜操作.加入譜編碼(歷史列表[目前步].譜編碼);
    樂譜操作.加入歌詞碼(歷史列表[目前步].歌詞碼);
    播放器.指針位置 = 指針原位;
  }
  function 下一步() {
    if(目前步 >= 歷史列表.length - 1) return;
    目前步++;
    let 指針原位 = 播放器.指針位置;
    樂譜操作.清空();
    樂譜操作.加入譜編碼(歷史列表[目前步].譜編碼);
    樂譜操作.加入歌詞碼(歷史列表[目前步].歌詞碼);
    播放器.指針位置 = 指針原位;
  }
  Object.assign(obj, {
    清空: 清空歷史,
    記住: 在歷史中記住現在,
    上一步,
    下一步,
  });
  Object.defineProperty(obj, "歷史列表", { get: () => [...歷史列表] });
  Object.defineProperty(obj, "目前步", { get: () => 目前步 });
  return obj;
})();
